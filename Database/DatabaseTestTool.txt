DROP  DATABASE TestTool;
CREATE DATABASE TestTool;
USE TestTool;

CREATE TABLE User(
		UserId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
		FirstName VARCHAR(20) NOT NULL,
		LastName VARCHAR(20) NOT NULL,
		Mail VARCHAR(50) UNIQUE NOT NULL,
		Password VARCHAR(200) NOT NULL,
		Role VARCHAR(30) NOT NULL
		);

CREATE TABLE Test(
		TestId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
		TUserId INT,
		TTitle VARCHAR(200) NOT NULL,
        TStartTestDate DATETIME,
		TEndTestDate DATETIME,
		TTimeMin INT(10) NOT NULL,
		TMaxPoints INT(10) NOT NULL,
		TSelfCorrecting TINYINT(1) DEFAULT 0,
		TDisplayResult TINYINT(1) DEFAULT 0,
		CONSTRAINT TUserIdFK FOREIGN KEY (TUserId) REFERENCES User(UserId)
		);

CREATE TABLE Questions(
		QuestionId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
		QTestId INT,
		Question VARCHAR(120) NOT NULL,
		QType VARCHAR(20) NOT NULL,
		QPoints INT(10) NOT NULL,
		QOrder INT(10) NOT NULL,
		CONSTRAINT QTestIdFK FOREIGN KEY (QTestId) REFERENCES Test(TestId)
		);


CREATE TABLE Answers(
		AnswersId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
		AQuestionId INT,
		AOrder INT(10) NOT NULL,
		APoints INT(10) NOT NULL,
		AText VARCHAR(60) NOT NULL,
		CONSTRAINT AQuestionIdFK FOREIGN KEY (AQuestionId) REFERENCES Questions(QuestionId)
		);

CREATE TABLE AnsweredTest(
		AnsweredTestId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
		ATestId INT,
		ATUserId INT,
		ATDate DATETIME NOT NULL,
		ATCorrected BOOLEAN NOT NULL,
		ATShowResult BOOLEAN NOT NULL DEFAULT 0,
		ATPoints INT(10) NOT NULL,
        ATTimeSec INT(10) NOT NULL DEFAULT 0,
		ATGrade VARCHAR(10) NOT NULL,
		CONSTRAINT ATAnswersIdFK FOREIGN KEY (ATestId) REFERENCES Test(TestId),
		CONSTRAINT UAUserIdFK FOREIGN KEY (ATUserId) REFERENCES User(UserId)
		);

CREATE TABLE AnsweredQuestion(
		AnsweredQuestionId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
		AQQuestionId INT,
		AQAnsweredTestId INT,
		AQPoints INT(10) NOT NULL,
		CONSTRAINT AQQuestionIdFK FOREIGN KEY (AQQuestionId) REFERENCES Questions(QuestionId),
		CONSTRAINT AQAnsweredTestIdFK FOREIGN KEY (AQAnsweredTestId) REFERENCES AnsweredTest(AnsweredTestId) ON DELETE CASCADE
		);

CREATE TABLE UserAnswer(
		UserAnswerId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
		UAQuestionId INT,
		UAAnswersId INT,
		UAOrder INT(1) NOT NULL,
		UAText VARCHAR(5000),
		CONSTRAINT UAQuestionIdFK FOREIGN KEY (UAQuestionId) REFERENCES AnsweredQuestion(AnsweredQuestionId) ON DELETE CASCADE,
		CONSTRAINT UAAnswersIdFK FOREIGN KEY (UAAnswersId) REFERENCES Answers(AnswersId)
		);

CREATE TABLE StudentGroup(
      StudentGroupId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
      groupName VARCHAR(50)
    );

CREATE TABLE GroupDetails(
       GroupDetailsId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
       GDStudentGroupId INT,
       GDUserId INT,
       CONSTRAINT GDStudentGroupIdFK FOREIGN KEY (GDStudentGroupId) REFERENCES StudentGroup(StudentGroupId),
       CONSTRAINT GDUserIdFK FOREIGN KEY (GDUserId) REFERENCES User(UserId)
		);

CREATE TABLE TestComment(
TestCommentId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
TestComment VARCHAR(600),
TCUserId INT,
TCATestId INT,
CONSTRAINT TCUserIdFK FOREIGN KEY (TCUserId) REFERENCES User(UserId),
CONSTRAINT TCATestIdFK FOREIGN KEY (TCATestId) REFERENCES AnsweredTest(AnsweredTestId));

CREATE TABLE QuestionComment(
QuestionCommentId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
QuestionComment VARCHAR (60),
QCUserId INT,
QCQuestionId INT,
CONSTRAINT QCUserIdFK FOREIGN KEY (QCUserId) REFERENCES User(UserId),
CONSTRAINT QCQuestionIdFK FOREIGN KEY (QCQuestionId) REFERENCES Questions(QuestionId));

CREATE TABLE pictureURL(
PictureId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
PURL VARCHAR(500),
PQuestionId INT,
CONSTRAINT PQuestionIdFK FOREIGN KEY (PQuestionId) REFERENCES Questions(QuestionId) ON DELETE CASCADE);

CREATE TABLE TestAccess(
       TestAccessId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
       TAUserId INT,
      TATestId INT,
       CONSTRAINT TATestIdFK FOREIGN KEY (TATestId) REFERENCES Test(TestId),
       CONSTRAINT TAUserIdFK FOREIGN KEY (TAUserId) REFERENCES User(UserId));

CREATE VIEW PDFTest AS
(SELECT t.TestId, u.UserId, at.AnsweredTestId, t.TTitle, u.FirstName, u.LastName, at.ATTimeSec, t.TMaxPoints, at.ATGrade, at.ATPoints, at.ATDate
FROM Test AS t INNER JOIN AnsweredTest AS at ON at.ATestId = t.TestId
INNER JOIN User AS u ON u.UserId = at.ATUserId);

CREATE VIEW ElevStatistik AS
(SELECT u.UserId, u.FirstName, t.TTitle AS Titel, t.ATDate AS Inlämnad, t.ATGrade AS Betyg
FROM User AS u
INNER JOIN
(SELECT Test.TTitle, AnsweredTest.ATUserId, AnsweredTest.ATDate, AnsweredTest.ATGrade
FROM Test
INNER JOIN AnsweredTest
ON AnsweredTest.ATestId = Test.TestId) AS t
ON u.UserId = t.ATUserId);

CREATE VIEW Correcting AS
(SELECT AnsweredTest.ATUserId, AnsweredTest.AnsweredTestId, AnsweredTest.ATestId, Answers.*, UserAnswer.*, AnsweredQuestion.AQAnsweredTestId, AnsweredQuestion.AQQuestionId, Questions.QType
FROM Answers INNER JOIN UserAnswer ON UserAnswer.UAAnswersId = Answers.AnswersId
INNER JOIN AnsweredQuestion ON AnsweredQuestion.AnsweredQuestionId = UserAnswer.UAQuestionId
INNER JOIN AnsweredTest ON AnsweredQuestion.AQAnsweredTestId = AnsweredTest.AnsweredTestId
INNER JOIN Questions ON Questions.QuestionId = AnsweredQuestion.AQQuestionId);

CREATE VIEW QuestionAnswers AS
(SELECT t.AnsweredTestId, a.*, aq.AQPoints, ua.* FROM Answers AS a RIGHT OUTER JOIN
UserAnswer AS ua ON a.AnswersId = ua.UAAnswersId INNER JOIN
AnsweredQuestion AS aq ON ua.UAQuestionId = aq.AnsweredQuestionId
INNER JOIN AnsweredTest AS t ON t.AnsweredTestId = aq.AQAnsweredTestId);

CREATE VIEW Results AS
(SELECT at.ATTimeSec, at.ATGrade, at.ATPoints, t.TMaxPoints, t.TestId,
at.AnsweredTestId, at.ATUserId, at.ATCorrected, at.ATShowResult, t.TTitle
FROM AnsweredTest AS at
INNER JOIN Test AS t
ON t.TestId = at.ATestId);

INSERT INTO User (FirstName, LastName, Mail, Password, Role) VALUES ('Gurkan', 'Gurksson', 'Gurkan4life@hotmail.com', '4004be2fae027f09f3fcb9fdad48385c46bd06d5279ca2dd8ddc8b6b9e0b63f9012e706407eef09310017e6d9c5ecc45HSr8TfbVUER9grn5HYU6+g==', 'student'),
('Bönan', 'Bönsson', 'Bönor@hotmail.com', '4004be2fae027f09f3fcb9fdad48385c46bd06d5279ca2dd8ddc8b6b9e0b63f9012e706407eef09310017e6d9c5ecc45HSr8TfbVUER9grn5HYU6+g==', 'student'),
('Nöten', 'Nötsson', 'Nötter@hotmail.com', '4004be2fae027f09f3fcb9fdad48385c46bd06d5279ca2dd8ddc8b6b9e0b63f9012e706407eef09310017e6d9c5ecc45HSr8TfbVUER9grn5HYU6+g==', 'student'),
('Bruttan', 'Bruttsson', 'Bruttis@hotmail.com', '4004be2fae027f09f3fcb9fdad48385c46bd06d5279ca2dd8ddc8b6b9e0b63f9012e706407eef09310017e6d9c5ecc45HSr8TfbVUER9grn5HYU6+g==', 'student'),
('Gösta', 'Göstasson', 'Gösta@hotmail.com', '4004be2fae027f09f3fcb9fdad48385c46bd06d5279ca2dd8ddc8b6b9e0b63f9012e706407eef09310017e6d9c5ecc45HSr8TfbVUER9grn5HYU6+g==', 'teacher'),
('Admin', 'Adminsson', 'Admin@hotmail.com', '4004be2fae027f09f3fcb9fdad48385c46bd06d5279ca2dd8ddc8b6b9e0b63f9012e706407eef09310017e6d9c5ecc45HSr8TfbVUER9grn5HYU6+g==', 'admin');